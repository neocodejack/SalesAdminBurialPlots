
@{
    ViewBag.Title = "ManageUser";
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/grid.locale-en.js"></script>
<script src="~/Scripts/jquery.jqGrid.min.js"></script>
@*<link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
<link href="~/Content/ui.jqgrid-bootstrap.css" rel="stylesheet" />
<script>
    $.jgrid.defaults.width = 620;
    $.jgrid.defaults.styleUI = 'Bootstrap';
</script>
<script src="~/Scripts/bootstrap.min.js"></script>
<div style="margin-left:20px">
    <table id="jqGrid"></table>
    <div id="jqGridPager"></div>
</div>
<script type="text/javascript">
        $(document).ready(function () {

            $("#jqGrid").jqGrid({
                url: '@Url.Action("GetUsersByAgent","Account")',
                datatype: "json",
                colModel: [
                    { label: 'Name', name: 'Name' },
                    { label: 'Email', name: 'Email' },
                    { label: 'AgentCode', name: 'AgentCode' , index: 'AgentCode', key:true },
                    {
                        name: 'Action', index: 'act', search: false, sortable: false, formatter: 'actions', editoptions:false,
                        formatoptions: {
                            keys: true,
                            editformbutton: false,
                            delOptions:
                                {
                                    ajaxDelOptions: { contentType: "application/json" },
                                    reloadAfterSubmit: true,
                                    onclickSubmit: function (eparams) {
                                        var retarr = {};
                                        var sr = $("#jqGrid").getGridParam('selrow');
                                        rowdata = $("#jqGrid").getRowData(sr);
                                        retarr = { employeeId: rowdata.employeeId };

                                        return retarr;
                                    },
                                    serializeDelData: function (data) {
                                        var postData = { 'data': data };
                                        return JSON.stringify(postData);
                                    }
                                }                           // we want use [Enter] key to save the row and [Esc] to cancel editing.

                        }
                    }
                ],
                del:true,
                viewrecords: true, // show the current page, data rang and total records on the toolbar
                autowidth: true,
                gridview: true,
                autoencode: true,
                height: 180,
                rowNum: 10,
                loadonce: true, // this is just for the demo
                pager: "#jqGridPager"
            });

            $('#jqGrid').navGrid('#jqGridPager',
                // the buttons to appear on the toolbar of the grid
                { edit: false, add: false, del: true, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
                // options for the Edit Dialog
                {
                    editCaption: "The Edit Dialog",
                    recreateForm: true,
                    //checkOnUpdate : true,
                    //checkOnSubmit : true,
                    beforeSubmit: function (postdata, form, oper) {
                        if (confirm('Are you sure you want to update this row?')) {
                            // do something
                            return [true, ''];
                        } else {
                            return [false, 'You can not submit!'];
                        }
                    },
                    closeAfterEdit: true,
                    errorTextFormat: function (data) {
                        return 'Error: ' + data.responseText
                    }
                },
                // options for the Add Dialog
                {
                    closeAfterAdd: true,
                    recreateForm: true,
                    errorTextFormat: function (data) {
                        return 'Error: ' + data.responseText
                    }
                },
                // options for the Delete Dailog
                {
                    errorTextFormat: function (data) {
                        return 'Error: ' + data.responseText
                    }
                });
       
            $("#jqGridPager").css({ "height": "35px" });
        });

    function deleteLink(cellValue, options, rowdata, action) {

    }
</script>
